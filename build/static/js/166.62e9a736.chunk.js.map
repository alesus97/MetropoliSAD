{"version":3,"file":"static/js/166.62e9a736.chunk.js","mappings":"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","sources":["pages/Auth/ConstAuth.js","components/Logo.jsx","components/AuthLayout.jsx","pages/Auth/ResetPasswordView.jsx","controllers/ResetPasswordController.js"],"sourcesContent":["\r\nimport styled from \"@emotion/styled\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nlet easing = [0.6, -0.05, 0.01, 0.99];\r\n\r\nexport const animate = {\r\n  opacity: 1,\r\n  y: 0,\r\n  transition: {\r\n    duration: 0.6,\r\n    ease: easing,\r\n    delay: 0.16,\r\n  },\r\n};\r\n\r\nexport const RootStyle = styled(\"div\")({\r\n    height: \"100vh\",\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n  });\r\n  \r\n export const HeadingStyle = styled(Box)({\r\n    textAlign: \"center\",\r\n  });\r\n  \r\n export const ContentStyle = styled(\"div\")({\r\n    maxWidth: 600,\r\n    padding: 25,\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    background: \"#292828\",\r\n  });\r\n\r\n  export const fadeInUp = {\r\n    initial: {\r\n      y: 60,\r\n      opacity: 0,\r\n      transition: { duration: 0.6, ease: easing },\r\n    },\r\n    animate: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.6,\r\n        ease: easing,\r\n      },\r\n    },\r\n  };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Box minHeight={180}>\r\n      <Link to=\"/\">\r\n        <p></p>\r\n        <Box component=\"img\" src=\"logo128.png\" alt=\"logo\"  />\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;","import {\r\n  RootStyle,\r\n  ContentStyle,\r\n  HeadingStyle,\r\n  animate,\r\n  fadeInUp,\r\n} from \"../pages/Auth/ConstAuth\";\r\n\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Alert,\r\n  Container,\r\n  Typography,\r\n  Fade,\r\n} from \"@mui/material\";\r\n\r\nimport { Error } from \"@mui/icons-material\";\r\nimport Logo from \"./Logo\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function AuthLayout(props) {\r\n    const [iserror, setIserror] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        setIsSubmitting(true);\r\n\r\n        props.handleSubmit(event)\r\n         .then(() => {\r\n            setIserror(false);\r\n            setErrorMessage(\"\");\r\n          })\r\n          .catch((err)=>{\r\n            console.log(err)\r\n            setIsSubmitting(false);     \r\n            setErrorMessage(err.message);\r\n            setIserror(true); \r\n          }) \r\n\r\n    } \r\n\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"sm\" component=\"form\" onSubmit={handleSubmit}>\r\n        <ContentStyle>\r\n          <HeadingStyle component={motion.div} {...fadeInUp}>\r\n            <Logo />\r\n            <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\r\n              {props.title}\r\n            </Typography>\r\n          </HeadingStyle>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n            component={motion.div}\r\n            initial={{ opacity: 0, y: 40 }}\r\n            animate={animate}\r\n          >\r\n\r\n            {props.children}\r\n\r\n          </Box>\r\n          <Box\r\n            component={motion.div}\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={animate}\r\n          >\r\n            <LoadingButton\r\n              name=\"loadingButton\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              data-cy=\"loginButton\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n              loadingIndicator={<CircularProgress color=\"primary\" size={16} />}\r\n            >\r\n              {isSubmitting ? \"loading...\" : props.buttonLabel}\r\n            </LoadingButton>\r\n\r\n            <p></p>\r\n\r\n            {iserror && (\r\n              <Fade\r\n                in={iserror} //Write the needed condition here to make it appear\r\n                timeout={{ enter: 1000, exit: 1000 }} //Edit these two values to change the duration of transition when the element is getting appeared and disappeard\r\n                addEndListener={() => {\r\n                  setTimeout(() => {\r\n                    setIserror(false);\r\n                  }, 4000);\r\n                }}\r\n              >\r\n                <Alert\r\n                  data-cy=\"alertLogin\"\r\n                  variant=\"filled\"\r\n                  color=\"primary\"\r\n                  icon={<Error fontSize=\"inherit\" />}\r\n                >\r\n                  {errorMessage}\r\n                </Alert>\r\n              </Fade>\r\n            )}\r\n          </Box>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ResetPasswordController from \"../../controllers/ResetPasswordController\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { \r\n  Visibility, \r\n  VisibilityOff \r\n} from \"@mui/icons-material\";\r\n\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  Stack,\r\n  Link,\r\n  Typography\r\n} from \"@mui/material\";\r\n\r\n\r\n\r\nconst ResetPasswordView = ({resendConfirmationCode}) => {\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  return (\r\n          <Box>\r\n            <TextField\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              data-cy=\"codice_verifica\"\r\n              label=\"Codice di verifica\"\r\n              name=\"verificationCode\"\r\n              margin=\"normal\"\r\n              required\r\n              type=\"number\"\r\n              sx={{\r\n                \"& fieldset\": {\r\n                  borderColor: \"white\",\r\n                },\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              autoComplete=\"off\"\r\n              data-cy=\"new_password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              label=\"Nuova password\"\r\n              name=\"newPassword\"\r\n              sx={{\r\n                \"& fieldset\": {\r\n                  borderColor: \"white\",\r\n                },\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPassword((prev) => !prev)}\r\n                    >\r\n                      {showPassword ? (\r\n                        <Visibility color=\"primary\" />\r\n                      ) : (\r\n                        <VisibilityOff color=\"primary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            \r\n            />\r\n\r\n            <TextField\r\n              margin=\"normal\"\r\n              fullWidth\r\n              data-cy=\"confirm_new_password\"\r\n              autoComplete=\"off\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              label=\"Conferma nuova password\"\r\n              name=\"confirmNewPassword\"\r\n              sx={{\r\n                \"& fieldset\": {\r\n                  borderColor: \"white\",\r\n                },\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPassword((prev) => !prev)}\r\n                    >\r\n                      {showPassword ? (\r\n                        <Visibility color=\"primary\" />\r\n                      ) : (\r\n                        <VisibilityOff color=\"primary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n\r\n            />\r\n\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            sx={{ my: 2 }}\r\n          >\r\n\r\n          <Typography\r\n            onClick={resendConfirmationCode}\r\n            alignContent=\"center\"\r\n            color=\"primary\"\r\n            variant=\"subtitle2\"\r\n            underline=\"hover\"\r\n          >  Non hai ricevuto il codice di verifica? Clicca qui per re-inviarlo\r\n          </Typography>\r\n\r\n          </Stack>\r\n\r\n          </Box>\r\n\r\n        \r\n  );\r\n};\r\n\r\nexport default ResetPasswordView;\r\n","import ResetPasswordView from \"../pages/Auth/ResetPasswordView\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport YupPassword from \"yup-password\";\r\nimport * as Yup from \"yup\";\r\nimport awsconfig from \"../aws-exports\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Amplify, { Auth } from \"aws-amplify\";\r\nimport AuthLayout from \"../components/AuthLayout\";\r\n\r\nexport default function ResetPasswordController() {\r\n  YupPassword(Yup);\r\n  Amplify.configure(awsconfig);\r\n  const title = \"È stato inviato un codice di verifica all'email indicata\";\r\n  const buttonLabel = \"Reimposta password\";\r\n  const navigate = useNavigate();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [iserror, setIserror] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const { state } = useLocation();\r\n  const { email } = state;\r\n\r\n  const resetPasswordSchema = Yup.object().shape({\r\n    verificationCode: Yup.string().required(\"Verification code is required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .min(8, \"Password is too short - shoud be 8 chars minimum.\")\r\n      .minLowercase(1, \"password must contain at least 1 lower case letter\")\r\n      .minUppercase(1, \"password must contain at least 1 upper case letter\")\r\n      .minNumbers(1, \"password must contain at least 1 number\")\r\n      .minSymbols(1, \"password must contain at least 1 special character\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n\r\n  const resendConfirmationCode = async () => {\r\n    try {\r\n      await Auth.forgotPassword(email)\r\n      console.log('code resent successfully');\r\n  } catch (err) {\r\n      throw err;\r\n  }\r\n  }\r\n  //test\r\n\r\n  const forgotPasswordSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const verificationCode = data.get(\"verificationCode\");\r\n    const newPassword = data.get(\"newPassword\");\r\n\r\n    try{\r\n      const parsedUser = await resetPasswordSchema\r\n      .validate(\r\n        {\r\n          verificationCode: data.get(\"verificationCode\"),\r\n          password: data.get(\"newPassword\"),\r\n          confirmPassword: data.get(\"confirmNewPassword\"),\r\n        },\r\n        { strict: true }\r\n      )\r\n\r\n      const resetPassword = await Auth.forgotPasswordSubmit(email, verificationCode, newPassword)\r\n      console.log(resetPassword)\r\n      navigate(\"/login\");\r\n\r\n    }catch(err){\r\n      throw err;\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <AuthLayout handleSubmit={forgotPasswordSubmit} title={title} buttonLabel={buttonLabel}> \r\n      <ResetPasswordView resendConfirmationCode={resendConfirmationCode}/>\r\n    </AuthLayout>\r\n  );\r\n}\r\n"],"names":["easing","animate","opacity","y","transition","duration","ease","delay","RootStyle","styled","height","display","placeItems","HeadingStyle","Box","textAlign","ContentStyle","maxWidth","padding","margin","justifyContent","flexDirection","background","fadeInUp","initial","minHeight","to","component","src","alt","AuthLayout","props","useState","iserror","setIserror","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","Container","onSubmit","event","handleSubmit","then","catch","err","console","log","message","motion","Typography","sx","color","mb","title","children","LoadingButton","name","fullWidth","size","type","variant","loading","loadingIndicator","CircularProgress","buttonLabel","Fade","in","timeout","enter","exit","addEndListener","setTimeout","Alert","icon","Error","fontSize","resendConfirmationCode","showPassword","setShowPassword","TextField","autoComplete","label","required","borderColor","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","prev","Visibility","VisibilityOff","Stack","direction","alignItems","my","alignContent","underline","ResetPasswordController","YupPassword","Yup","Amplify","awsconfig","navigate","useNavigate","email","useLocation","state","resetPasswordSchema","shape","verificationCode","password","min","minLowercase","minUppercase","minNumbers","minSymbols","confirmPassword","oneOf","Auth","forgotPasswordSubmit","preventDefault","data","FormData","currentTarget","get","newPassword","validate","strict","resetPassword"],"sourceRoot":""}