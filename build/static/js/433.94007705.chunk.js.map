{"version":3,"file":"static/js/433.94007705.chunk.js","mappings":"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","sources":["apis/APIService.js","components/Dialogs/DialogConfermaEliminazione.jsx","components/InsertFormDialog.jsx","components/Dialogs/DialogStore.jsx","pages/DrawerPages/StoreView.jsx","models/Premio.js","controllers/StoreController.js","pages/ErrorPage.jsx","../node_modules/@mui/icons-material/esm/Delete.js"],"sourcesContent":["import {API} from \"aws-amplify\";\r\nconst apiName = \"cinema-sad\";\r\n\r\nexport const APIService = {\r\n  /* *\r\n        ! Palinsesto\r\n        * OK funziona\r\n    */\r\n\r\n  getAllSpettacoli: function (codiceCinema) {\r\n    return API.get(apiName,`/cinema/${codiceCinema}/spettacoli`, {response: true})\r\n  },\r\n\r\n  deleteSpettacolo: function (codiceSpettacolo) {\r\n    return API.del(apiName,`/spettacoli/${codiceSpettacolo}`, {response: true} )\r\n  },\r\n\r\n  createSpettacolo: function (idSala, spettacolo) {\r\n    const myInit = {\r\n      body: spettacolo,\r\n      response: true\r\n    }\r\n    return API.post(apiName,`/sale/${idSala}/spettacoli`, myInit)\r\n  },\r\n\r\n  /* *\r\n        ! Sala\r\n        * OK funziona\r\n    */\r\n\r\n  getAllSale: function (codiceCinema) {\r\n    return API.get(apiName, `/cinema/${codiceCinema}/sale`, {response: true})\r\n  },\r\n\r\n  deleteSala: function (idSala) {\r\n    return API.del(apiName, `/sale/${idSala}`, {response: true})\r\n  },\r\n\r\n  createSala: function (codiceCinema, sala) {\r\n    const myInit = {\r\n      body: sala,\r\n      response: true\r\n    }\r\n    return API.post(apiName, `/cinema/${codiceCinema}/sale`, myInit )\r\n  },\r\n\r\n  /**\r\n   *  ! Film\r\n   *  * OK funziona\r\n   */\r\n\r\n  getAllFilms: function () {\r\n    return API.get(apiName, `/film`, {response: true})\r\n  },\r\n\r\n  deleteFilm: function (codiceFilm) {\r\n    return API.del(apiName, `/film/${codiceFilm}`, {response: true})\r\n  },\r\n\r\n  createFilm: function (film) {\r\n    const myInit = {\r\n      body: film,\r\n      response: true\r\n    }\r\n\r\n    return API.post(apiName, `/film`, myInit )\r\n  },\r\n\r\n  /**\r\n   *  ! Questions\r\n   *  *OK funziona\r\n   */\r\n\r\n  getAllQuestions: function (filmId) {\r\n    return API.get(apiName, `/film/${filmId}/domande`, {response: true} )\r\n  },\r\n\r\n  deleteQuestion: function (codiceDomanda) {\r\n    return API.del(apiName, `/domande/${codiceDomanda}`, {response: true} )\r\n  },\r\n\r\n  createQuestion: function (filmId, question) {\r\n\r\n    const myInit = {\r\n      body: question,\r\n      response: true\r\n    }\r\n\r\n    return API.post(apiName, `/film/${filmId}/domande`, myInit)\r\n  },\r\n\r\n  /**\r\n   *  ! Store\r\n   *  ? Non implementato\r\n   */\r\n\r\n  getAllPrizes: function () {\r\n    return API.get(apiName, `/premi`, {response: true})\r\n  },\r\n\r\n  deletePrize: function (codicePremio) {\r\n    return API.del(apiName, `/premi/${codicePremio}`, {response: true})\r\n  },\r\n\r\n  createPrize: function (prize) {\r\n    const myInit = {\r\n      body: prize,\r\n      response: true\r\n    }\r\n\r\n    return API.post(apiName, `/premi`, myInit )\r\n  },\r\n\r\n  /**\r\n   *  ! Cinema\r\n   */\r\n\r\n  getAllCinemas: function () {\r\n    return API.get(apiName, `/cinema`, {response: true} )\r\n  },\r\n\r\n  deleteCinema: function (codiceCinema) {\r\n    return API.del(apiName, `/cinema/${codiceCinema}`, {response: true})\r\n  },\r\n\r\n  createCinema: function (cinema) {\r\n    const myInit = {\r\n      body: cinema,\r\n      response: true\r\n    }\r\n    return API.post(apiName, `/cinema`, myInit )\r\n  },\r\n\r\n  /**\r\n   *  ! Prenotazione (questa sta qua solo per il testing)\r\n   */\r\n\r\n    getPostiDisponibili: function (codiceSpettacolo) {\r\n    return API.get(apiName, `/spettacoli/${codiceSpettacolo}/disponibilita`, {response: true} )\r\n  },\r\n\r\n  getBiglietti: function () {\r\n    return API.get(apiName, `/biglietti`, {response: true} )\r\n  },\r\n\r\n  createBiglietto: function (posti, codiceSpettacolo) {\r\n    const myInit = {\r\n      body: posti,\r\n      response: true\r\n    }\r\n\r\n    return API.post(apiName, `/spettacoli/${codiceSpettacolo}/biglietti`, myInit )\r\n  }, \r\n/**\r\n   *  ! Visualizza profilo (questa sta qua solo per il testing)\r\n   */\r\n  getProfilo: function () {\r\n    return API.get(apiName, `/user`, {response: true} )\r\n  },\r\n};","import * as React from \"react\";\r\n\r\nimport {\r\n  DialogContent, \r\n  DialogContentText,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport { WarningAmber } from \"@mui/icons-material\";\r\n\r\n\r\nexport default function DialogConfermaEliminazione(props) {\r\n\r\n\r\n  return (\r\n\r\n        <DialogContent>\r\n           <DialogContentText component=\"div\" id=\"alert-dialog-description\" > \r\n\r\n\r\n          <Stack  justifyContent=\"space-between\" direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n            <WarningAmber color=\"error\" />\r\n            <Typography textAlign=\"center\"  > {props.onDeleteMessage} \r\n            </Typography>\r\n         <WarningAmber color=\"error\" />\r\n          </Stack>\r\n      \r\n        </DialogContentText> \r\n        </DialogContent>\r\n        \r\n\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Dialog, \r\n  DialogContent, \r\n  DialogTitle,\r\n  Alert, \r\n  Button, \r\n  Container, \r\n  Stack, \r\n  Divider,\r\n  Box,\r\n  Fade\r\n } from \"@mui/material\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Error } from \"@mui/icons-material\";\r\n\r\n\r\nexport default function InsertFormDialog(props) {\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [iserror, setIserror] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n  const handleClose = () => {\r\n    props.setCloseDialog();\r\n    setIserror(false);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n\r\n  const handleOK = (event) => {\r\n    setIsDisabled(true);\r\n\r\n    props.handleOK(event)\r\n    .then( () => {\r\n      setIsDisabled(false);\r\n      handleClose();\r\n      setIserror(false);\r\n      setErrorMessage(\"\");\r\n    })\r\n    .catch( (error)=>{\r\n      console.log(error)\r\n      setIserror(true);\r\n      setErrorMessage(error.response.data.message);\r\n    })\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={props.openDialog}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n          onClose={handleClose}\r\n        >\r\n        <DialogTitle align='center' >{props.title}</DialogTitle>\r\n        <Divider/>\r\n          <DialogContent>\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleOK}\r\n              >\r\n           \r\n                {props.children}\r\n\r\n\r\n\r\n                {iserror && <Fade\r\n                    in={iserror} //Write the needed condition here to make it appear\r\n                    timeout={{ enter: 1000, exit: 1000 }} //Edit these two values to change the duration of transition when the element is getting appeared and disappeard\r\n                    addEndListener={() => {\r\n                      setTimeout(() => {\r\n                        console.log(\"prova\")\r\n                        setIsDisabled(false)\r\n                        setIserror(false);\r\n                      }, 4000);\r\n                    }}\r\n                  >\r\n                    \r\n                    <Alert\r\n                       data-cy=\"AlertDialog\"\r\n                       variant=\"filled\"\r\n                       color=\"primary\"\r\n                       icon={<Error fontSize=\"inherit\" />}\r\n                    >                     \r\n                      {errorMessage}\r\n                    </Alert>\r\n                  </Fade>}\r\n\r\n                <p></p>\r\n                <Stack justifyContent='flex-end' direction=\"row\" spacing={2}>\r\n                <Button variant=\"contained\" onClick={handleClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    data-cy=\"ok\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"      \r\n                    disabled={isDisabled}\r\n                  >\r\n                    Ok\r\n                  </Button>\r\n                </Stack>\r\n              </Box>\r\n            </Container>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n}","import * as React from \"react\";\r\n\r\nimport {\r\n  Box, \r\n  TextField\r\n} from \"@mui/material\";\r\n\r\nexport default function DialogStore(){\r\n    return(\r\n        <Box> \r\n    <TextField\r\n    margin=\"normal\"\r\n    \r\n    name=\"premio\"\r\n    fullWidth\r\n    label=\"Crea premio\"\r\n    required\r\n    sx={{\"& fieldset\": {\r\n        borderColor: \"white\",\r\n      }, \"&   .MuiSelect-icon\": {\r\n        color: \"#F9D159\",\r\n      }\r\n    \r\n    }}\r\n     />\r\n\r\n<TextField\r\n    margin=\"normal\"\r\n    \r\n    name=\"crediti\"\r\n    fullWidth\r\n    label=\"Crediti necessari\"\r\n    required\r\n    sx={{\"& fieldset\": {\r\n        borderColor: \"white\",\r\n      }, \"&   .MuiSelect-icon\": {\r\n        color: \"#F9D159\",\r\n      }\r\n    \r\n    }}\r\n     />\r\n    \r\n    \r\n\r\n  </Box>\r\n\r\n\r\n    );\r\n\r\n}","\r\nimport React from \"react\";\r\nimport InsertFormDialog from \"../../components/InsertFormDialog\";\r\nimport DialogConfermaEliminazione from \"../../components/Dialogs/DialogConfermaEliminazione\";\r\nimport DialogStore from \"../../components/Dialogs/DialogStore\";\r\n\r\nimport {\r\n  Delete, \r\n  Add\r\n} from \"@mui/icons-material\";\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n  IconButton,\r\n  Fab,\r\n  Skeleton\r\n\r\n} from \"@mui/material\";\r\n\r\nexport default function StoreView({handleSubmit, handleDelete, loading, prizes, setOnDeleteIndex }){\r\n    const [openInsertDialog, setopenInsertDialog] = React.useState(false);\r\n    const [openConfirmDeleteDialog, setopenConfirmDeleteDialog] = React.useState(false);\r\n\r\n    \r\n      const skeletonArray = Array(5).fill('');\r\n    return(\r\n        <Box sx={{p:3}}>\r\n\r\n      <Fab sx={{position: 'fixed' , bottom:\"3%\", right:\"3%\"}}color=\"primary\" aria-label=\"add\" onClick={() => setopenInsertDialog(true)}>\r\n        <Add />\r\n      </Fab>\r\n\r\n      <InsertFormDialog\r\n        openDialog={openInsertDialog}\r\n        setCloseDialog={() => setopenInsertDialog(false)}\r\n        handleOK={handleSubmit}\r\n        title={\"Inserisci nuovo premio\"}\r\n      ><DialogStore/></InsertFormDialog>\r\n\r\n      <InsertFormDialog\r\n        openDialog={openConfirmDeleteDialog}\r\n        setCloseDialog={() => setopenConfirmDeleteDialog(false)}\r\n        handleOK={handleDelete}\r\n        title=\"Sei sicuro di voler eliminare il premio?\"\r\n      ><DialogConfermaEliminazione onDeleteMessage=\"L'azione non potrà essere annullata\"/></InsertFormDialog>\r\n\r\n      <TableContainer component={Paper} >\r\n        <Table sx={{ minWidth: 650 }} >\r\n          <TableHead>\r\n            <TableRow height={70} >\r\n              <TableCell component=\"th\" scope=\"row\" width=\"30%\">Premio</TableCell>\r\n              <TableCell align=\"center\" width=\"10%\">Punti necessari</TableCell>\r\n              <TableCell align=\"center\" width=\"10%\">Elimina</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n\r\n           {loading &&\r\n            skeletonArray.map((item, index) => (\r\n              <TableRow   height={70}\r\n              key={index}>\r\n                <TableCell component=\"th\" scope=\"row\" width=\"30%\">\r\n                  <Skeleton />\r\n                </TableCell>\r\n                <TableCell align=\"center\" width=\"10%\">\r\n                  <Skeleton />\r\n                </TableCell>\r\n                \r\n                <TableCell align=\"center\" width=\"10%\">\r\n                  <IconButton> <Delete color=\"background\"/> </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))} \r\n\r\n\r\n          {prizes &&\r\n            prizes.map((prize, index) => (\r\n            \r\n              <TableRow  height={70}\r\n                key={index}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\"> {prize.descrizione} </TableCell>\r\n                <TableCell align=\"center\"> {prize.costo} </TableCell>\r\n                <TableCell align=\"center\" >  <IconButton onClick={() => {setOnDeleteIndex(index); setopenConfirmDeleteDialog(true)}}> <Delete color=\"primary\" /> </IconButton> </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            \r\n          </TableBody>\r\n          \r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n    \r\n    );\r\n}","\r\n\r\nexport default class Premio{\r\n    \r\n    constructor(data) {\r\n        this.descrizione = data.descrizione;\r\n        this.costo = data.costo;\r\n        this.codice_premio = data.codice_premio;\r\n    }\r\n}\r\n\r\n\r\n","import StoreView from \"../pages/DrawerPages/StoreView\"\r\nimport ErrorPage from \"../pages/ErrorPage\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { APIService } from \"../apis/APIService\";\r\nimport Premio from \"../models/Premio\"\r\n\r\nexport default function StoreController(){\r\n    const [prizes, setPrizes] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [onDeleteIndex,setOnDeleteIndex] = useState();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [error, setError] = useState();\r\n\r\n    const createPremio = async (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const postData = {\r\n            descrizione: data.get(\"premio\"),\r\n            costo: data.get(\"crediti\"),\r\n          };\r\n    \r\n          try {\r\n            const response = await APIService.createPrize(postData);\r\n    \r\n            const newPrize = {\r\n              codice_premio: response.data.codice_premio,\r\n              ...postData,\r\n             \r\n            };\r\n      \r\n            const newPrizes = [...prizes];\r\n            newPrizes.push(newPrize);\r\n            setPrizes(newPrizes);\r\n        } catch(error) {\r\n          throw error\r\n        } \r\n\r\n    };\r\n\r\n\r\n    \r\n      const getAllPremi = async (event) => { \r\n       APIService.getAllPrizes().then((res) => {\r\n        const newPrizes = res.data.map((prize) => new Premio(prize));\r\n        console.log(newPrizes);\r\n        setPrizes(newPrizes);\r\n         setLoading(false);\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      setError(true);\r\n      setErrorMessage(err);\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAllPremi()\r\n        \r\n      }, []);\r\n\r\n      const deletePremio = async (event) => {\r\n        event.preventDefault();\r\n        const codicePremio = prizes[onDeleteIndex].codice_premio;\r\n    \r\n        try {\r\n          const response = await APIService.deletePrize(codicePremio)\r\n  \r\n            const dataDelete = [...prizes];\r\n            dataDelete.splice(onDeleteIndex, 1);\r\n            setPrizes([...dataDelete]);\r\n            console.log(\"Premio cancellato correttamente\");\r\n    \r\n        } catch(error) {\r\n          throw error\r\n        } \r\n       \r\n       };\r\n\r\n    return(\r\n      error ?  \r\n      <ErrorPage error={errorMessage}/> :\r\n        <StoreView handleSubmit={createPremio} handleDelete={deletePremio} loading={loading} prizes={prizes} setOnDeleteIndex={setOnDeleteIndex}/>\r\n    );\r\n}","import React from \"react\";\r\nimport { Box, Container, Grid, Typography, Button, Stack } from \"@mui/material\";\r\nimport {ListItem} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ErrorPage(props) {\r\n    const navigate = useNavigate();\r\n   /*  console.log(props.error) */\r\n    return(\r\n        <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"85vh\",\r\n      }}\r\n    >\r\n\r\n      <Stack direction=\"row\" spacing={2}>\r\n   \r\n        <ListItem> \r\n          <Grid >\r\n            <Typography variant=\"h1\">\r\n              {props.error.response?.status}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n             {props.error?.code}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n             {props.error.response?.data.message}\r\n            </Typography>\r\n            <p></p>\r\n            {/* <Button variant=\"contained\" onClick={() => navigate('/schedule')}>Back Home</Button> */}\r\n          </Grid> \r\n          </ListItem>\r\n          <ListItem> \r\n         <Grid >\r\n            <img\r\n              src=\"/ErrorImage.png\"\r\n              alt=\"\"\r\n              width={500} height={500}\r\n            />\r\n            </Grid>\r\n            </ListItem>\r\n          \r\n      </Stack>\r\n    </Box>\r\n\r\n    );\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"names":["apiName","APIService","getAllSpettacoli","codiceCinema","API","response","deleteSpettacolo","codiceSpettacolo","createSpettacolo","idSala","spettacolo","myInit","body","getAllSale","deleteSala","createSala","sala","getAllFilms","deleteFilm","codiceFilm","createFilm","film","getAllQuestions","filmId","deleteQuestion","codiceDomanda","createQuestion","question","getAllPrizes","deletePrize","codicePremio","createPrize","prize","getAllCinemas","deleteCinema","createCinema","cinema","getPostiDisponibili","getBiglietti","createBiglietto","posti","getProfilo","DialogConfermaEliminazione","props","component","id","justifyContent","direction","xs","sm","spacing","color","textAlign","onDeleteMessage","InsertFormDialog","useState","isDisabled","setIsDisabled","iserror","setIserror","errorMessage","setErrorMessage","handleClose","setCloseDialog","open","openDialog","fullWidth","maxWidth","onClose","align","title","onSubmit","event","handleOK","then","catch","error","console","log","data","message","children","in","timeout","enter","exit","addEndListener","setTimeout","variant","icon","fontSize","onClick","type","disabled","DialogStore","Box","TextField","margin","name","label","required","sx","borderColor","StoreView","handleSubmit","handleDelete","loading","prizes","setOnDeleteIndex","React","openInsertDialog","setopenInsertDialog","openConfirmDeleteDialog","setopenConfirmDeleteDialog","skeletonArray","Array","fill","p","Fab","position","bottom","right","Add","TableContainer","Paper","Table","minWidth","TableHead","TableRow","height","TableCell","scope","width","TableBody","map","item","index","Skeleton","IconButton","Delete","descrizione","costo","Premio","this","codice_premio","StoreController","setPrizes","setLoading","onDeleteIndex","setError","createPremio","preventDefault","FormData","currentTarget","postData","get","newPrize","newPrizes","push","getAllPremi","res","err","useEffect","deletePremio","dataDelete","splice","ErrorPage","useNavigate","display","alignItems","status","code","src","alt","createSvgIcon","_jsx","d"],"sourceRoot":""}