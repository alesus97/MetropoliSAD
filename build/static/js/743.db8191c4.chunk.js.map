{"version":3,"file":"static/js/743.db8191c4.chunk.js","mappings":"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","sources":["../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = to - from;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { delay } from '../../utils/delay.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    return valueTransition.delay !== undefined\n        ? valueTransition.delay\n        : transition.delay !== undefined\n            ? transition.delay\n            : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    const { elapsed = 0 } = transition;\n    valueTransition.elapsed =\n        elapsed - secondsToMilliseconds(transition.delay || 0);\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        const animation = valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate &&\n                        valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete &&\n                        valueTransition.onComplete();\n                },\n            });\n        return () => animation.stop();\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return () => { };\n    }\n    const useInstantAnimation = !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false;\n    return useInstantAnimation\n        ? valueTransition.elapsed\n            ? () => delay(set, -valueTransition.elapsed)\n            : set()\n        : start();\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        return getAnimation(key, value, target, { ...transition, delay: getDelayFromTransition(transition, key) }, onComplete);\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { sync } from '../frameloop/index.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.8.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.8.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.8.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","color","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","position","visibility","display","variant","left","size","transform","vars","palette","action","disabled","right","React","inProps","ref","useThemeProps","children","idProp","id","loading","loadingIndicatorProp","other","_objectWithoutPropertiesLoose","useId","_jsx","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","className","_jsxs","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_superPropBase","object","property","Object","prototype","hasOwnProperty","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","isVariantLabel","v","isAnimationControls","start","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginBottom","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","shallowCompare","prev","prevLength","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","splice","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","initialGuess","result","approximateRoot","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","spring","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","frameData","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","add","cancel","index","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","elapsed","delay","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","timeout","checkElapsed","read","convertTransitionToAnimationOptions","isEasingArray","getDelayFromTransition","valueTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","finalTarget","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","inertia","potentialUnitType","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","postRender","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","animateVariant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","Element","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}